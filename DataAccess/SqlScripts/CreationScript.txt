CREATE SCHEMA `pcgstorage` ;

CREATE TABLE `pcgstorage`.`pcguser` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(200) NOT NULL,
  `Password` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Id`));

CREATE TABLE `pcgstorage`.`party` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) NOT NULL,
  `PcgUserId` INT NOT NULL,
  PRIMARY KEY (`Id`));

ALTER TABLE `pcgstorage`.`party` 
ADD INDEX `fk_party_pcguser_idx` (`PcgUserId` ASC);
ALTER TABLE `pcgstorage`.`party` 
ADD CONSTRAINT `fk_party_pcguser`
  FOREIGN KEY (`PcgUserId`)
  REFERENCES `pcgstorage`.`pcguser` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

CREATE TABLE `pcgstorage`.`charactercard` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id`));

CREATE TABLE `pcgstorage`.`partycharacter` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `PartyId` INT NOT NULL,
  `CharacterCardId` INT NOT NULL,
  PRIMARY KEY (`Id`));

ALTER TABLE `pcgstorage`.`partycharacter` 
ADD INDEX `fk_partycharacter_party_idx` (`PartyId` ASC),
ADD INDEX `fk_partycharacter_charactercard_idx` (`CharacterCardId` ASC);

ALTER TABLE `pcgstorage`.`partycharacter` 
ADD CONSTRAINT `fk_partycharacter_party`
  FOREIGN KEY (`PartyId`)
  REFERENCES `pcgstorage`.`party` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_partycharacter_charactercard`
  FOREIGN KEY (`CharacterCardId`)
  REFERENCES `pcgstorage`.`charactercard` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

CREATE TABLE `pcgstorage`.`skill` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Dice` INT NOT NULL,
  `CharacterCardId` INT NOT NULL,
  `PossibleAddons` INT NOT NULL,
  PRIMARY KEY (`Id`));

ALTER TABLE `pcgstorage`.`skill` 
ADD CONSTRAINT `fk_skill_charactercard`
  FOREIGN KEY (`CharacterCardId`)
  REFERENCES `pcgstorage`.`charactercard` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

CREATE TABLE `pcgstorage`.`subskill` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `BaseSkillId` INT NOT NULL,
  `Adjustment` INT NOT NULL,
  PRIMARY KEY (`Id`));

ALTER TABLE `pcgstorage`.`subskill` 
ADD INDEX `fk_subskill_skill_idx` (`BaseSkillId` ASC);
ALTER TABLE `pcgstorage`.`subskill` 
ADD CONSTRAINT `fk_subskill_skill`
  FOREIGN KEY (`BaseSkillId`)
  REFERENCES `pcgstorage`.`skill` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

CREATE TABLE `pcgstorage`.`characterskill` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `PartyCharacterId` INT NOT NULL,
  `SkillId` INT NOT NULL,
  `SelectedAdjustment` INT NOT NULL,
  PRIMARY KEY (`Id`));

ALTER TABLE `pcgstorage`.`characterskill` 
ADD INDEX `fk_characterskill_partycharacter_idx` (`PartyCharacterId` ASC),
ADD INDEX `fk_characterskill_skill_idx` (`SkillId` ASC);

ALTER TABLE `pcgstorage`.`characterskill` 
ADD CONSTRAINT `fk_characterskill_partycharacter`
  FOREIGN KEY (`PartyCharacterId`)
  REFERENCES `pcgstorage`.`partycharacter` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_characterskill_skill`
  FOREIGN KEY (`SkillId`)
  REFERENCES `pcgstorage`.`skill` (`Id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `pcgstorage`.`charactercard` 
ADD COLUMN `BaseHandSize` INT NOT NULL AFTER `Name`,
ADD COLUMN `BaseLightArmors` BIT NOT NULL AFTER `BaseHandSize`,
ADD COLUMN `BaseHeavyArmors` BIT NOT NULL AFTER `BaseLightArmors`,
ADD COLUMN `BaseWeapons` BIT NOT NULL AFTER `BaseHeavyArmors`;

CREATE TABLE `pcgstorage`.`power` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Text` VARCHAR(500) NOT NULL,
  `Number` INT NOT NULL,
  `Dice` INT NULL,
  `Adjustment` INT NULL,
  `CharacterCardId` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_power_charactercard_id_idx` (`CharacterCardId` ASC),
  CONSTRAINT `fk_power_charactercard_id`
    FOREIGN KEY (`CharacterCardId`)
    REFERENCES `pcgstorage`.`charactercard` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

ALTER TABLE `pcgstorage`.`charactercard` 
ADD COLUMN `BaseWeaponCards` INT NOT NULL AFTER `BaseWeapons`,
ADD COLUMN `BaseSpellCards` INT NOT NULL AFTER `BaseWeaponCards`,
ADD COLUMN `BaseArmorCards` INT NOT NULL AFTER `BaseSpellCards`,
ADD COLUMN `BaseItemCards` INT NOT NULL AFTER `BaseArmorCards`,
ADD COLUMN `BaseAllyCards` INT NOT NULL AFTER `BaseItemCards`,
ADD COLUMN `BaseBlessingCards` INT NOT NULL AFTER `BaseAllyCards`;
